minimum-vagga: v0.6.0

containers:
  _base_alpine:
    setup:
    - !Alpine v3.4
    - !EnsureDir /config

  redis:
    setup:
    - !Container _base_alpine
    - !Install [redis]
    - !EnsureDir /storage
    volumes:
      /storage: !Persistent
        name: redis
        init-command: _copy-example-db
      /config: !BindRO /work/config

  builder:
    setup:
    - !Container _base_alpine
    - !NpmDependencies
      file: package.json
      peer: true
      optional: true
      dev: true

  static:
    setup:
    - !Container builder
    - !EnsureDir /static
    - !Copy
      source: /work/frontend
      path: /tmp/frontend
    - !Copy
      source: /work/webpack.config.js
      path: /tmp/webpack.config.js
    - !Env
      NODE_PATH: /usr/lib/node_modules
      NODE_ENV: production
    - !RunAs
      work-dir: /tmp
      script: webpack --progress --output-path /static
    auto-clean: true

  python-dev:
    setup:
    - !Container _base_alpine
    - !Install [python3]
    - !Py3Requirements requirements.txt

commands:
  _copy-example-db: !Command
    container: redis
    run: cp examples/dump.rdb /storage/

  _redis: &redis !Command
    container: redis
    run:
    - redis-server
    - /config/redis.conf

  _python: &python !Command
    container: python-dev
    work-dir: twicher
    run:
    - python3
    - application.py

  webpack: !Command
    container: builder
    description: Webpack CLI
    environ:
      NODE_PATH: /usr/lib/node_modules
    run: [webpack]

  run: !Supervise
    description: Run full server stack
    kill-unresponsive-after: 5
    children:
      redis: *redis
      python: *python